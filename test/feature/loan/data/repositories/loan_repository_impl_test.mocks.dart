// Mocks generated by Mockito 5.4.5 from annotations
// in credconnect/test/feature/loan/data/repositories/loan_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:credconnect/core/shared/storage_preferences.dart' as _i6;
import 'package:credconnect/feature/loan/data/datasource/loan_datasource.dart'
    as _i4;
import 'package:credconnect/feature/loan/domain/entity/client_entity.dart'
    as _i2;
import 'package:flutter_secure_storage/flutter_secure_storage.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeClientEntity_0 extends _i1.SmartFake implements _i2.ClientEntity {
  _FakeClientEntity_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFlutterSecureStorage_1 extends _i1.SmartFake
    implements _i3.FlutterSecureStorage {
  _FakeFlutterSecureStorage_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [ILoanDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockILoanDataSource extends _i1.Mock implements _i4.ILoanDataSource {
  MockILoanDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.ClientEntity> createClient({
    required _i2.ClientEntity? client,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createClient, [], {#client: client}),
            returnValue: _i5.Future<_i2.ClientEntity>.value(
              _FakeClientEntity_0(
                this,
                Invocation.method(#createClient, [], {#client: client}),
              ),
            ),
          )
          as _i5.Future<_i2.ClientEntity>);
}

/// A class which mocks [StoragePreferences].
///
/// See the documentation for Mockito's code generation for more information.
class MockStoragePreferences extends _i1.Mock
    implements _i6.StoragePreferences {
  MockStoragePreferences() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.FlutterSecureStorage get flutterStorage =>
      (super.noSuchMethod(
            Invocation.getter(#flutterStorage),
            returnValue: _FakeFlutterSecureStorage_1(
              this,
              Invocation.getter(#flutterStorage),
            ),
          )
          as _i3.FlutterSecureStorage);

  @override
  _i5.Future<dynamic> read({required String? key}) =>
      (super.noSuchMethod(
            Invocation.method(#read, [], {#key: key}),
            returnValue: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> write({required String? key, required String? value}) =>
      (super.noSuchMethod(
            Invocation.method(#write, [], {#key: key, #value: value}),
            returnValue: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> delete({required String? key}) =>
      (super.noSuchMethod(
            Invocation.method(#delete, [], {#key: key}),
            returnValue: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> deleteAll() =>
      (super.noSuchMethod(
            Invocation.method(#deleteAll, []),
            returnValue: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);
}
